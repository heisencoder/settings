# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# Install these packages to fully enable shortcuts in this file:
# sudo apt install xss-lock xbacklight terminator scrot xautolock gnome-control-center
#
# Also, build these packages:
# https://github.com/zoltanp/xrandr-invert-colors

# Use "Windows key" as the standard modifier
set $mod Mod4

set $google-chrome /usr/bin/google-chrome-stable

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- "i3lock -c 000050" --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Media player controls (requires `playerctl`)
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioPause exec playerctl pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# These require sudo apt-get install xbacklight
bindsym XF86MonBrightnessDown exec --no-startup-id /usr/bin/xbacklight -dec 20
bindsym XF86MonBrightnessUp exec --no-startup-id /usr/bin/xbacklight -inc 20

# Equivalent multimedia Keys via $mod
bindsym $mod+Up exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && killall -SIGUSR1 i3status
bindsym $mod+Down exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && killall -SIGUSR1 i3status
bindsym $mod+bracketleft exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && killall -SIGUSR1 i3status
bindsym $mod+bracketright exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && killall -SIGUSR1 i3status

# Camera control for auto-exposure mode
# Requires sudo apt install v4l-utils
# bindsym $mod+Ctrl+comma exec v4l2-ctl -d /dev/video2 --set-ctrl=exposure_auto=1
# bindsym $mod+Ctrl+period exec v4l2-ctl -d /dev/video2 --set-ctrl=exposure_auto=3

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
# bindsym $mod+Return exec /usr/bin/gnome-terminal
# bindsym $mod+Control+i exec /usr/bin/terminator
bindsym $mod+Control+i exec /usr/bin/alacritty || /usr/bin/terminator || /usr/bin/gnome-terminal || i3-sensible-terminal

# Start a Chrome window
bindsym $mod+Control+u exec $google-chrome --enable-features=NativeNotifications
# Take a break from personal profile.
# bindsym $mod+Control+Return exec $google-chrome --user-data-dir=.config/chrome-personal

# Fix the keyboard repeat rate.
bindsym $mod+Control+Return exec /home/matt/settings/fix

# Start a Secure Shell Window
# bindsym $mod+Shift+o exec $google-chrome --app=chrome-extension://pnhechapfaindjhompbnflcldabbghjo/html/nassh.html#profile-id:b142
bindsym $mod+Control+o exec /snap/bin/code

# Start a Cider window
# bindsym $mod+Shift+p exec $google-chrome --app=https://cider.corp.google.com/?chromeApp
# Start an VSCode Window (install via `sudo apt install code`)
# bindsym $mod+Control+p exec $google-chrome --app=chrome-extension://iodihamcpbpeioajjeobimgagajmlibd/html/nassh.html

# Start a Hangouts window
# bindsym $mod+Control+y exec $google-chrome --app=https://chat.google.com

# Start a Tasks Window as an app
# bindsym $mod+Shift+t exec $google-chrome --app=https://tasks.google.com/embed/list/~default?fullWidth=1
# bindsym $mod+Shift+t exec $google-chrome --app=https://b.corp.google.com/hotlists/3046566
# bindsym $mod+Shift+t exec $google-chrome --app=https://g3c.corp.google.com/

# Hotkeys to autofocus a particular window type
bindsym $mod+u [instance="oogle-chrome"] focus
bindsym $mod+i [class="^Terminator|Alacritty|Gnome-terminal$"] focus
# VSCode:
bindsym $mod+o [instance="^code$"] focus
# Zoom
bindsym $mod+p [title="^Zoom Meeting$"] focus
# Cider:
bindsym $mod+y [instance="chat.google.com"] focus
# Tasks:
# bindsym $mod+t [instance="tasks.google.com__embed_list__default"] focus
bindsym $mod+t [instance="g3c.corp.google.com"] focus

# kill focused window
bindsym $mod+q kill

# Disable focus following mouse
focus_follows_mouse no

# start dmenu (a program launcher)
bindsym $mod+r exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Switch focus to next tab group.
bindsym Mod1+Tab focus parent, focus right
# bindsym $mod+Tab focus parent, focus right

# alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# move focused window
bindsym $mod+Control+h move left
bindsym $mod+Control+j move down
bindsym $mod+Control+k move up
bindsym $mod+Control+l move right

# Move window to next tab group.
bindsym Mod1+Control+Tab mark _cur, focus parent, focus right, mark _new, [con_mark=_cur] move to mark _new, [con_mark=_cur] focus

# alternatively, you can use the cursor keys:
# bindsym $mod+Shift+Left move left
# bindsym $mod+Shift+Down move down
# bindsym $mod+Shift+Up move up
# bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+semicolon split h

# Lock screen and suspend computer
bindsym $mod+apostrophe exec "i3lock -c 000050 && systemctl suspend"

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Control+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Control+1 move container to workspace number $ws1
bindsym $mod+Control+2 move container to workspace number $ws2
bindsym $mod+Control+3 move container to workspace number $ws3
bindsym $mod+Control+4 move container to workspace number $ws4
bindsym $mod+Control+5 move container to workspace number $ws5
bindsym $mod+Control+6 move container to workspace number $ws6
bindsym $mod+Control+7 move container to workspace number $ws7
bindsym $mod+Control+8 move container to workspace number $ws8
bindsym $mod+Control+9 move container to workspace number $ws9
bindsym $mod+Control+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Control+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Control+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Control+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Disable resize mode because it sucks
# resize window (you can also use the mouse for that)
# mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
#        bindsym h resize shrink width 10 px or 10 ppt
#        bindsym j resize grow height 10 px or 10 ppt
#        bindsym k resize shrink height 10 px or 10 ppt
#        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
#        bindsym Left resize shrink width 10 px or 10 ppt
#        bindsym Down resize grow height 10 px or 10 ppt
#        bindsym Up resize shrink height 10 px or 10 ppt
#        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
#        bindsym Return mode "default"
#        bindsym Escape mode "default"
#        bindsym $mod+r mode "default"
#}

#bindsym $mod+r mode "resize"

# Matt's customizations to key bindings
#bindsym Mod1+Control+l exec "cinnamon-screensaver-command --lock"
bindsym $mod+Control+semicolon exec "i3lock -c 000050"

bindsym $mod+Control+period resize shrink width 100 px or 10 ppt
bindsym $mod+Control+m      resize grow height 160 px or 16 ppt
bindsym $mod+Control+slash  resize shrink height 160 px or 16 ppt
bindsym $mod+Control+comma  resize grow width 100 px or 10 ppt

# See https://github.com/zoltanp/xrandr-invert-colors
bindsym $mod+comma exec "/usr/local/bin/xrandr-invert-colors"
# Commands to adjust which monitor is active.  This is only good for laptop
# bindsym $mod+comma exec "xrandr --output eDP1 --off --output DP1 --auto"
# bindsym $mod+Control+comma exec "xrandr --output eDP1 --auto --output DP1 --mode 1920x1080"
# bindsym $mod+period exec "xrandr --fb 1920x1080 --output eDP1 --mode 1920x1080"
# bindsym $mod+slash exec "xrandr --output LVDS1 --auto --right-of HDMI3"
bindsym $mod+period exec "xrandr --output eDP-1 --off"
# This will automatically activate all monitors
bindsym $mod+slash exec "xrandr --auto"

# Don't focus new windows or allow current windows to steal focus.
#no_focus [class="."]
# Don't let Hangouts window steal focus or be floating
no_focus [instance="chat.google.com"]
for_window [instance="chat.google.com"] floating disable
#focus_on_window_activation urgent
#focus_on_window_activation none

# Hide window borders on edge of screen.
hide_edge_borders both

# Show marks on the right side of the window decoration.
show_marks yes

# RedShift
bindsym $mod+n exec "redshift -x"
bindsym $mod+m exec "redshift -O 2500k"

# Screen capture -- requires both scrot and xclip to be installed
# Multi-screen screenshots with scrot
bindsym --release Print exec scrot 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # All screens

# OSX-like area selection screenshots
bindsym --release $mod+c exec scrot -s 'screenshot_%Y%m%d_%H%M%S.png' -e 'mkdir -p ~/Pictures/screenshots && mv $f ~/Pictures/screenshots && xclip -selection clipboard -t image/png -i ~/Pictures/screenshots/`ls -1 -t ~/Pictures/screenshots | head -1`' # Area selection

#-------------------------------------------------------------------------
# Remove titles from Chrome windows
# Hint: Use xprop command to find class name for a window.
# for_window [class="oogle-chrome$"] border pixel 1
# for_window [class="hromium-browser$"] border pixel 0
# Remove all titles from all windows in non-tabbed views
for_window [class="."] border pixel 4

# class                 border  backgr. text    indicator child_border
client.focused          #FF0000 #5588ff #ffffff #2e9ef4   #FF0000
client.focused_inactive #666666 #888888 #ffffff #484e50   #5f676a
client.unfocused        #666666 #666666 #bbbbbb #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #808080


# Lock the screen after several minutes of being idle:
# sudo apt install xautolock
exec xautolock -detectsleep -time 10 -locker "i3lock -c 000050" -notify 30 -notifier "notify-send -u critical -t 10000 -- 'LOCKING screen in 30 seconds'"

# Enable compton, a compositing windows manager.  This requires having compton
# installed (sudo apt-get install compton)
# See http://unix.stackexchange.com/questions/136932/why-am-i-having-ghosting-and-tearing-with-the-i3-window-manager-paired-with-xcom
# exec --no-startup-id compton -CGb --backend glx --vsync opengl --inactive-dim 0.125  #disabled due to making screen go black
exec --no-startup-id compton --inactive-dim 0.125 --backend glx 

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}

# Run the gnome sounds applet for volume control
# This is part of the gnome-control-center package
exec --no-startup-id /usr/bin/gnome-sound-applet

